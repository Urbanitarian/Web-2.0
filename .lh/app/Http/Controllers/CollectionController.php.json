{
    "sourceFile": "app/Http/Controllers/CollectionController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1686334688193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686535693990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,15 +20,15 @@\n \n     public function cols()\n     {\n \n-        // echo \"sdsdsd\";\n+        echo \"sdsdsd\";\n \n-        if (session()->has('FRONT_USER_LOGIN')) {\n-            return view('collections');\n-        } else {\n-            return redirect('/login');\n-        }\n+        // if (session()->has('FRONT_USER_LOGIN')) {\n+        //     return view('collections');\n+        // } else {\n+        //     return redirect('/login');\n+        // }\n     }\n \n     public function saveCollection(Request $request)\n     {\n"
                }
            ],
            "date": 1686334688192,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\City;\nuse App\\Models\\Collection;\nuse App\\Models\\CollectionName;\nuse App\\Models\\Country;\nuse App\\Models\\Masterplan;\nuse App\\Models\\Neighbourhood;\nuse App\\Models\\Streetscape;\nuse Illuminate\\Http\\Request;\n\nclass CollectionController extends Controller\n{\n    public $masternum = 0;\n    public $streetnum = 0;\n    public $urbannum = 0;\n\n\n    public function cols()\n    {\n\n        // echo \"sdsdsd\";\n\n        if (session()->has('FRONT_USER_LOGIN')) {\n            return view('collections');\n        } else {\n            return redirect('/login');\n        }\n    }\n\n    public function saveCollection(Request $request)\n    {\n\n        if (session()->has('FRONT_USER_LOGIN')) {\n\n            $collection_id = $_POST['id'];\n\n            $type = $_POST['type'];\n\n            $c_name = $_POST['c_name'];\n\n            $user_id = session()->get('FRONT_USER_ID');\n\n\n            switch ($type) {\n                case 'master':\n                    $existing_master = Collection::where('master_id', $collection_id)->first();\n                    if ($existing_master) {\n                        return response()->json([\n                            'status' => 'no',\n                            'msg' => 'Collection already exist!'\n                        ]);\n                    } else {\n                        Collection::create([\n                            'master_id' => $collection_id,\n                            'collection_name_id' => $c_name,\n                            'user_id' => $user_id\n                        ]);\n                        return response()->json([\n                            'status' => 'yes',\n                            'msg' => 'Collection added!'\n                        ]);\n                    }\n\n\n                    break;\n                case 'street':\n                    $existing_street = Collection::where('street_id', $collection_id)->first();\n                    if ($existing_street) {\n                        return response()->json([\n                            'status' => 'no',\n                            'msg' => 'Collection already exist!'\n                        ]);\n                    } else {\n                        Collection::create([\n                            'street_id' => $collection_id,\n                            'collection_name_id' => $c_name,\n                            'user_id' => $user_id\n                        ]);\n                        return response()->json([\n                            'status' => 'yes',\n                            'msg' => 'Collection added!'\n                        ]);\n                    }\n                    break;\n\n                case 'urban':\n                    $existing_urban = Collection::where('urban_id', $collection_id)->first();\n                    if ($existing_urban) {\n                        return response()->json([\n                            'status' => 'no',\n                            'msg' => 'Collection already exist!'\n                        ]);\n                    } else {\n                        Collection::create([\n                            'urban_id' => $collection_id,\n                            'collection_name_id' => $c_name,\n                            'user_id' => $user_id\n                        ]);\n                        return response()->json([\n                            'status' => 'yes',\n                            'msg' => 'Collection added!'\n                        ]);\n                    }\n                    break;\n            }\n        } else {\n            return response()->json([\n                'status' => 'no',\n                'msg' => 'Pleaes login!'\n            ]);\n        }\n\n\n\n\n        // return response()->json('created');\n    }\n\n    public function removeCollection()\n    {\n        $collection_id = $_POST['id'];\n        $type = $_POST['type'];\n\n        switch ($type) {\n            case 'master':\n\n                Collection::where('master_id', $collection_id)->delete();\n                return response()->json([\n                    'status' => 'yes',\n                ]);\n                break;\n\n            case 'street':\n\n                Collection::where('street_id', $collection_id)->delete();\n                return response()->json([\n                    'status' => 'yes',\n                ]);\n                break;\n\n            case 'urban':\n\n                Collection::where('urban_id', $collection_id)->delete();\n                return response()->json([\n                    'status' => 'yes',\n                ]);\n                break;\n\n            default:\n                # code...\n                break;\n        }\n    }\n\n    public function checkCollection(Request $request)\n    {\n\n\n        $collection_id = $_POST['id'];\n        $type = $_POST['type'];\n\n        switch ($type) {\n            case 'master':\n                $existing_master = Collection::where('master_id', $collection_id)->first();\n                if ($existing_master) {\n                    return response()->json([\n                        'status' => 'yes',\n                        'id' => $collection_id\n                    ]);\n                } else {\n                    return response()->json([\n                        'status' => 'no',\n                        'id' => $collection_id\n                    ]);\n                }\n                break;\n            case 'street':\n                $existing_street = Collection::where('street_id', $collection_id)->first();\n                if ($existing_street) {\n                    return response()->json([\n                        'status' => 'yes',\n                        'id' => $collection_id\n                    ]);\n                } else {\n                    return response()->json([\n                        'status' => 'no',\n                        'id' => $collection_id\n                    ]);\n                }\n                break;\n\n\n            default:\n\n                $existing_street = Collection::where('urban_id', $collection_id)->first();\n                if ($existing_street) {\n                    return response()->json([\n                        'status' => 'yes',\n                        'id' => $collection_id\n                    ]);\n                } else {\n                    return response()->json([\n                        'status' => 'no',\n                        'id' => $collection_id\n                    ]);\n                }\n                break;\n        }\n    }\n\n\n    public function collectionDetail($id)\n    {\n\n        $cls = CollectionName::with('collections')->find($id);\n\n        $user_id = session()->get('FRONT_USER_ID');\n\n        $masters = $cls->collections->where('user_id', $user_id)->map(function ($q) {\n            if ($q->masterplan != null) {\n                return   $this->masternum++;\n            }\n        })->count();\n\n        $cls->collections->map(function ($q) {\n\n            if ($q->streetscape != null) {\n\n                return   $this->streetnum++;\n            }\n        })->count();\n\n        $cls->collections->map(function ($q) {\n            if ($q->urbanscape != null) {\n\n                return   $this->urbannum++;\n            }\n        })->count();\n\n        $mastercount = $this->masternum;\n        $streetcount = $this->streetnum;\n        $urbancount = $this->urbannum;\n\n\n        $cities = City::all();\n\n        $countries = Country::all();\n\n        return view('collection_detail', compact('id', 'cities', 'countries', 'mastercount', 'streetcount', 'urbancount', 'cls'));\n    }\n}\n"
        }
    ]
}